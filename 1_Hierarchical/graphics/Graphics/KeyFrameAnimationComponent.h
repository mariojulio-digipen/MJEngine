// KeyFrameAnimationComponent.H
// Header autogenerated by MJEngine automation tools
// WARNING: Do not modify autogenerated comments, automation 
// tools depend on them.

// Edition author: mzaldivar

#pragma once
#include "Component.h"
#include "GLObject.h"

#include <vector>

struct compare_t
{
	bool operator() (double id, const GLObjectAnimKeyFrames& u)
	{
		return id < u.time;
	}

	bool operator() (const GLObjectAnimKeyFrames& u, double id)
	{
		return id > u.time;
	}
};


class GLObject;
class MoveAlongPathComponent;
class Event;
//class TransformComponent;
class KeyFrameAnimationComponent : public Component
{
private:
	// Start Private properties list

		// TODO - declare private members
	GLObject* ownerGlo;
	int prevVelo;
	int prevDelta;
	int delta;

	double t;
	double frameJump;

	//std::vector<GLObjectAnimKeyFrames> debug;
	//int debugFramesNumber = 0;

	int startSeconds = 0;
	bool startCount;
	int currentSeconds = 0;
	int cylcesNumber = 0;

	float cyclesPerSecond = 0.0f;

	double v_t = 0.0000;
	double P = 0.0000;
	double bend_factor = 1.0000;
	double n = 1.0000;
	double motionCycleFlag = 1.0000;

	bool stopMotionCycle = false;
		
	MoveAlongPathComponent* moveComponent;
	//TransformComponent* ownerTransform
	// End Private properties list
	
	// Start private user defined functions

		// TODO - declare user defined private functions

	// End private user defined functions

public:

	// Start Public properties list

		// TODO - declare public members

	// End Private properties list

	KeyFrameAnimationComponent();
	~KeyFrameAnimationComponent();

	// Start implementation functions
	bool Init();
	void Update();
	void Destroy();
	void CompleteExtraSetup();
	void HandleEvent(const Event* const evt);
	// End implementation functions

	// Start public user defined functions
	
		// TODO - declare user defined public functions
	MoveAlongPathComponent* GetMoveComponent() { return moveComponent; }
	// End public user defined functions
};
