// LineComponent.CPP
// Implementation autogenerated by MJEngine automation tools
// WARNING: Do not modify autogenerated comments, automation 
// tools depend on them.

// Edition author: mzaldivar

#include "LineComponent.h"
#include "GameObject.h"
#include "GLObject.h"
#include "TransformComponent.h"
#include <sstream>

LineComponent::LineComponent()
{
}


LineComponent::~LineComponent()
{
}


bool LineComponent::Init()
{
	// TODO - Implement initializations here
	// This function runs once when object manager
	// load objects, before serialization
	
	

	

	return true;
}


void LineComponent::Update()
{
	// TODO - Implement all the updates here
	// This function is executed once everyframe
	owner = GetOwner();
	ownerTrans = owner->FindComponent<TransformComponent>();

	ownerParent = owner->GetParent();
	if (ownerParent)
		ownerParentTrans = ownerParent->FindComponent<TransformComponent>();
	
	
	GLObject* glo = owner->GetGLObject();
	//Transform->ParentPosition, Transform->Position

	

	if (ownerParent)
	{
		GLObject* parentglo = ownerParent->GetGLObject(); 
		owner->GetGLObject()->DrawLine(glo->Transform->ParentPosition,
			glo->Transform->Position, glm::vec3(0.0f, 0.0f, 1.0f), 1.0f);
	}

}


void LineComponent::Destroy()
{
	// TODO - Optional, use to release memory
	// This function is called by the user.
}


void LineComponent::CompleteExtraSetup()
{
	// TODO - Implement any setup that needs to be executed
	// after the owner gameobject already exists.
	
}


